name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency: Deploy

jobs:
  Publish:
    environment: Production

    permissions:
      contents: read
      packages: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install (Buildx)
        uses: docker/setup-buildx-action@v2

      - name: Install (Flyctl)
        run: |
          curl -L https://fly.io/install.sh | FLYCTL_INSTALL=/usr/local sh

      - id: meta
        name: Tag
        uses: docker/metadata-action@v4
        with:
          flavor: |
            latest=true
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Login (Fly)
        run: |
          flyctl auth docker -t ${{ secrets.FLY_API_TOKEN }}

      - name: Login (GHCR)
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build
        uses: docker/build-push-action@v3
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - id: export
        name: Export
        uses: actions/github-script@v6
        with:
          script: |
            const metadata = JSON.parse(`${{ steps.meta.outputs.json }}`)
            const fullUrl = metadata.tags.find((t) => t.includes(':sha-'))

            if (fullUrl == null) {
              core.error('Unable to find sha tag of image')
            } else {
              const tag = fullUrl.split(':')[1]
              core.setOutput('image', fullUrl)
              core.setOutput('tag', tag)
            }

      - name: Deploy
        run: |
          flyctl deploy -t ${{ secrets.FLY_API_TOKEN }} --image ${{ steps.export.outputs.image }}
